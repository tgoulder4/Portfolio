@import "./moreTWClasses.scss";
@import "./colours.scss";
@import "./mixins.scss";
@import "./variables.scss";
@import "./reset.scss";
.coverAnim {
  @include introAnimation(introduceOpacity);
}
.mainRevealAnim {
  @include introAnimation(introduceWidth);
}
.topCoverAnim {
  animation: fadeToTransparent 1.1s cubic-bezier(0.2, 0.01, 0.29, 0.98) forwards;
}
.tallVLine {
  animation: fadeFromTransparent 1s linear forwards;
}
a{
  text-decoration: underline;
  :hover{
    color: var(--primaryColour);
  }
}
#rails {
  margin-top: var(--navHeight);
  height: 35vw;
  max-height: 500px;
  min-height: 350px;
  .cover {
    width: 100%;
    // background-color: hsl(0 0 calc(10 + calc(calc(var(--mainRevealWidth) * 100) / 100vw))); /*hsl(0,0,10 +mainRevealWidth*100/vw*/
    background-color: var(--secondary_colour);
    height: 2000px;
    z-index: 3;
    //COVERANIM WAS HERE
  }
  #mainReveal {
    //MAINREVEALANIM WAS HERE
    width: 8vw;
    height: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
    gap: 0;
    #accordionLeft {
      .vLine {
        @include lineShadow(9px, 0px, 15px, -4px, rgba(0, 0, 0, 0.34));
      }
    }
    #accordionRight {
      .vLine {
        @include lineShadow(-9px, 0px, 15px, -4px, rgba(0, 0, 0, 0.34));
      }
    }
    .accordion {
      width: 30%; /*use percentages*/
      display: flex;
      flex-direction: row;
      .lgAccCont {
        flex-direction: column;
        justify-content: center;
        gap: 50%;
        flex: 2;
        padding-top: 104px;
      }
      .smAccCont {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 45%;
        flex: 1;
      }
      .tallVLine {
        height: calc(100% + var(--navHeight));
        position: relative;
        top: calc(-1 * var(--navHeight));
        z-index: 3;
        background: linear-gradient(
          white calc(var(--navHeight) - 1.8px),
          var(--lineColour) calc(var(--navHeight) - 1.8px)
        );
        flex-shrink: 0;
      }
    }

    #center {
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      .centerAccordion {
        height: 50px;
        flex-shrink: 0;
        .centAccCont {
          display: flex;
          justify-content: space-around;
          height: 100%;
        }
      }
      #shapeShift-container {
        display: flex;
        align-items: center;
        height: 100%;

        #shapeShift {
          .block {
            background-color: white;
          }
        }
      }
    }
  }
}
.hLine {
  width: 100%;
  min-height: var(--hLineHeight);
  max-height: var(--hLineHeight);

  flex-shrink: 0;
}
.vLine {
  height: 100%;
  max-width: var(--vlineWidth);
  min-width: var(--vlineWidth);
  flex-shrink: 0;
}
.line {
  background-color: var(--lineColour);
  flex-shrink: 0;
}

#fanaticalTitle {
  line-height: 0.9;
  @media (min-width: $BPsm) {
    text-align: left !important;
  }
  @media (max-width: $BPxl) {
    font-size: min(100pt, 13vw);
  }
}

#projectCards {
  row-gap: $projectCardSeparation;
  column-gap: $projectCardSeparation;
  .secondAndThirdProjectContainer {
    width: 100%;
    column-gap: $projectCardSeparation;
    @include minw($BPmd) {
      column-gap: $projectCardSeparation;
    }
  }
}

//end media queries
////////////////////////////////////////
///
#shapeShift-container {
  background-color: var(--primaryColour);
  //try that or #shapeshift
  #shapeshift {
    position: relative;
    height: 310px;
    margin: 0 auto;
  }
}
#topPart {
  justify-content: space-between;
  left: 0;
  // animation: ssTopBlocksMoveDown cubic-bezier(0.075, 0.82, 0.165, 1) 10s
  //   infinite;
}
@keyframes ssGap {
  40% {
  }
  60% {
    width: 109px;
  }
  80% {
  }
  81% {
    width: calc(50% - 1px);
  }
  100% {
    width: 109px;
  }
}
@keyframes ssTopBlocksMoveDown {
  60% {
    /*State 3*/
    top: 0;
  }
  80% {
    /*State 4*/
    top: 50%;
  }
  81% {
    /*Reset back to original*/
    top: 0px;
  }
}
@keyframes middleBlockShortens {
  0% {
  }
  20% {
    /*State 1*/
    top: 50%;
    height: 21.8%;
  }
  40% {
    /*State 2*/
    height: 100%;
    top: 70px;
    left: calc(50% - 27.5px);
  }
  60% {
    /*State 3*/
    left: calc(100% - var(--blockSize));
    height: 21.8%;
    top: 50%;
  }
  80% {
    /*State 4*/
    left: calc(100% - var(--blockSize));
    top: 50%;
    height: 21.8%;
  }
  81% {
    /*Reset back to original*/
    top: 70px;
    height: 100%; //252 is 100%
  }
}

.block {
  background-color: white;
  box-shadow: inset 0px 4px 2px 0px rgba(179, 179, 179, 1);
  top: 0;
}

#leftBlock,
#rightBlock {
  width: 100%;
  height: var(--blockSize);
  // animation: ssGap cubic-bezier(0.075, 0.82, 0.165, 1) 10s infinite;
  /*animation: ssTop cubic-bezier(0.075, 0.82, 0.165, 1) 10s infinite;*/
}

#leftBlock {
  left: 0;
}
#rightBlock {
  right: 0;
}
#bottomBlock {
  top: 40px;
  left: calc(50% - (0.5 * var(--blockSize)));
  width: var(--blockSize);
  height: 100%;
  // animation: middleBlockShortens cubic-bezier(0.075, 0.82, 0.165, 1) 10s
  //   infinite;
}
////////////////////////////////////////
@keyframes introduceWidth {
  from {
    width: 8vw;
  }
  to {
    width: 100vw;
  }
}
@keyframes introduceOpacity {
  from {
    background-color: #171717;
  }
  to {
    background-color: white;
  }
}
@keyframes fadeToTransparent {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeFromTransparent {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.greyBdr-left {
  border-left: 2px solid var(--grey);
}

.greyBdr-right {
  border-right: 2px solid var(--grey);
}

.greyBdr-bottom {
  border-bottom: 2px solid var(--grey);
}

.greyBdr-top {
  border-top: 2px solid var(--grey);
}

.greyBdr-all {
  border: 2px solid var(--grey);
}
nav {
  height: var(--navHeight);
  background-color: var(--primaryColour);
  // color: var(--primaryColour);
  top: 0;
  left: 0;
  padding-left: 3%;
  padding-right: 3%;
  z-index: 2;
  ul {
    color: white;
    margin: 1.5vw;
    list-style: none;
    li {
      a {
        font-size: 0.8rem;
        color: white;
      }
    }
  }
}
/*main gets display flex. push center shapeshift outwards*/
.grey {
  background-color: var(--grey);
}
.black {
  background-color: var(--primaryColour);
}
.italic {
  font-style: italic;
}
img {
  -webkit-user-drag: none;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}
#red {
  @include maxw(640px) {
    border-left: none !important;
  }
  #lFiller1 {
    margin-top: var(--CYANMARGINWIDTH);
  }
  #yellow1 {
    #cyan {
      //- Need to apply grid to fanatical area (right here).
      #greySocials {
        padding-top: var(--CYANMARGINWIDTH);
        padding-bottom: var(--CYANMARGINWIDTH);
      }
      #purple2 {
        h1 {
          font-weight: 700;
          line-height: 0.9;
          ::after {
            content: "";
            position: absolute;
            top: 12px;
            left: -18px;
            width: 764px;
            height: 94px;
            z-index: -1;
            @include maxw($BPlg) {
              display: none;
            }
            @include minw($BPxl) {
              top: 11px;
              left: -18px;
              width: 700px;
              height: 86px;
            }
            background-color: var(--lighterGrey);
          }
        }
        h2,
        h3 {
          font-size: 1.2rem;
        }
        h3 {
          color: var(--gray);
        }
        em {
          font-weight: 800;
          font-style: normal;
        }
      }
    }
  }
  #firstDivider {
    width: 100% !important;
  }
  .HigherContForRightFiller {
    .thiccDivider {
      height: var(--DIVIDER1HEIGHT);
      z-index: -2;
    }
  }
  #yellow2 {
    width: 100%;
    height: var(--DIVIDER1HEIGHT);
    #lightGreyDown {
      width: var(--CYANMARGINWIDTH);
      height: 100%;
      z-index: -1;
      background-color: var(--lighterGrey);
    }
  }
  #yellow3 {
    .cyan2 {
      display: grid;
      grid-template-areas:
        "summary"
        "projectArea" "githubArea";
      width: 100%;
      @include minw($BPxl) {
        width: calc(100% - var(--CYANMARGINWIDTH));
        border-left: 2px solid var(--grey);
      }
      grid-template-rows: auto auto auto;
      grid-template-columns: auto;
      #place1,
      #place3,
      #place4,
      #place5 {
        display: none;
      }

      #place1 {
        grid-area: blank;
      }
      #place3 {
        grid-area: blank2;
      }
      #place4 {
        grid-area: blank3;
      }
      #place5 {
        grid-area: blank4;
      }
      .purple3,
      #quoteArea {
        grid-area: summary;
        p {
          font-weight: 200;
          color: var(--primaryColour);
        }
        border-right: 2px solid var(--grey);
        border-left: none;
      }
      .purple4 {
        grid-area: projectArea;
        padding-top: 50px;
        padding-bottom: 50px;
        gap: 30px;

        border-right: 2px solid var(--grey);

        #scrollContainer {
          width: 100%;
        }
        h1 {
          font-weight: 800;
          line-height: 0.9;
          font-size: 6vw;
        }
        .green2 {
          h2:nth-child(3) {
            letter-spacing: 0.2rem;
          }
          .legend {
            p:nth-child(2) {
              text-decoration: underline;
            }
            font-size: 1.5rem;
          }
        }
        .green3 {
          .projectCard {
            height: 44vh;
            .imgFiller {
              background-color: var(--grey);
              height: 22vh;
            }
            summary {
              padding: 0.8rem;
              p {
                font-weight: 300;
                margin-bottom: 2px;
              }
              .btn-info {
                background-color: var(--primaryColour) !important;
                color: white !important;
              }
            }
          }
        }
      }
      .githubWrapper {
        grid-area: githubArea;
        .shortHeightWrapper {
          background-color: var(--lighterGrey);
          height: 100%;
        }
        #purple5 {
          grid-area: githubArea;
          padding: 30px;
          i {
            color: var(--primaryColour) !important;
          }
        }
      }
    }
  }
  #yellow4 {
    #aboutMeSection {
      display: grid;
      @media (min-width: $BPxl) {
        grid-template-areas:
          "leftBlank aboutMe rightBlank"
          "leftBlank areaSkillSet rightBlank"
          "leftBlank middleBlank rightBlank";
        grid-template-rows: auto auto auto;
        grid-template-columns: var(--CYANMARGINWIDTH) auto var(--GREYBLOCKWIDTH);
      }
      @media (max-width: $BPxl) {
        border-right: 2px solid var(--grey); //not working FOR SOME REASON >???????????????
        grid-template-areas:
          "aboutMe "
          "areaSkillSet "
          "middleBlank ";
        grid-template-rows: auto auto auto;
        grid-template-columns: auto;

        #bl3,
        #bl1,
        #abtMeLFiller {
          display: none;
        }
      }
    }
    #bl1 {
      grid-area: leftBlank;
    }
    #bl2 {
      grid-area: middleBlank;
      height: 50px;
    }
    #bl3 {
      grid-area: rightBlank;
    }
    #titleArea {
      grid-area: aboutMe;
      padding-top: calc(var(--standardMargin) + 20px);
      padding-bottom: 30px;
      h2 {
        &::after {
          content: "";
          position: absolute;
          top: 75px;
          left: 34px;
          width: 370px;
          height: 50px;
          z-index: -1;
          background-color: var(--lighterGrey);
          @include maxw($BPsm) {
            display: none;
          }
        }
      }
    }
    #skillSetArea {
      grid-area: areaSkillSet;
      .anotherQuote {
        flex-basis: 50%;
        @media (max-width: $BPmd) {
          border-top: 2px solid var(--grey);
          border-left: none;
        }
        @media (max-width: $BPlg) {
          border-top: 2px solid var(--grey);
          border-left: none;
        }
        @media (min-width: $BPlg) {
          border-top: none;
          border-left: 2px solid var(--grey);
        }
      }
      .myEvolvingSkillset {
        flex-basis: 50%;
        h3 {
          white-space: nowrap;
        }
        .skillSetContainer {
          outline: 2px solid purple;
          height: 100%;
          .icons {
            outline: 2px solid green;
            i {
              font-size: 350%;
            }
          }
          .cert {
            outline: 2px solid green;
            border: 2px solid #c1c1c1;
            background-color: #f1f1f1;

            padding-top: 10px;
            padding-bottom: 10px;
            padding-left: 40px;
            padding-right: 40px;
            h3 {
              color: var(--primaryColour);
              em {
                font-weight: bold;
                font-style: normal;
                text-align: center;
              }
            }
            i {
              &::before {
                font-size: 2rem;
              }
            }
          }
        }
      }
    }
  }
  .fillerContainer {
    .Rfiller {
      margin-top: var(--CYANMARGINWIDTH);
      right: 0;
      width: calc(12.5vw - var(--CYANMARGINWIDTH));
      background-color: var(--primaryColour);
      z-index: -1;
    }
    .Lfiller {
      left: 0;
      width: calc(12.5vw);
      background-color: var(--lighterGrey);
      height: 81vw;
      z-index: -1;
    }
  }
  #contactMeSection {
    display: grid;
    @media (max-width: $BPxl) {
      grid-template-areas:
        " contactMe "
        " personalDetails ";
      grid-template-columns: auto;
      grid-template-rows: auto auto;
      #bl1, #bl2, #bl3 {
        display: none;
      }
      border-right: 2px solid var(--grey);
    }
    @media (min-width: $BPxl) {
      grid-template-areas:
        "leftBlank contactMe rightBlank"
        "leftBlank2 personalDetails rightBlank";
      grid-template-columns: var(--CYANMARGINWIDTH) auto var(--GREYBLOCKWIDTH);
      grid-template-rows: auto auto;
    }
    #details {
      grid-area: personalDetails;
    }
    #titleArea {
      grid-area: contactMe;
      padding-top: calc(var(--standardMargin) + 20px);
      padding-bottom: 30px;
      &::after {
        content: "";
        position: absolute;
        top: 75px;
        left: 34px;
        width: 455px;
        height: 49px;
        z-index: -1;
        background-color: var(--lighterGrey);
        @include maxw($BPsm) {
          display: none;
        }
      }
    }
    .contactElement {
      i {
        font-size: xx-large;
        margin-bottom: 10px;
      }
    }
    #details:nth-child(2) {
      margin-left: 10px;
    }
    #bl1 {
      grid-area: leftBlank;
    }
    #bl2 {
      grid-area: rightBlank;
    }
    #bl3 {
      grid-area: leftBlank2;
    }
  }
}
#projYelllo {
  background-color: rgb(255, 208, 0) !important;
}
#btnNext {
  margin-left: none;
  @media (min-width: $BPmd) {
    margin-left: 0.25rem;
  }
}
#projLm {
  background-color: #38b770 !important;
}
@media (max-width: $BPxl) {
  #abtMeLFiller {
    display: none;
  }
}
.projectTitleText,
#aboutMeSection h2,
#contactMeSection h2 {
  font-weight: 800;
  line-height: 0.9;
  font-size: 50pt;
}
.cyan {
  margin-left: var(--CYANMARGINWIDTH);
  @media (max-width: 1200px) {
    margin-left: 0 !important;
  }
}
.goesToLeft {
  left: 0;
}
.goesToRight {
  width: 87.3%;
}
.divider,
.Divider {
  background-color: var(--primaryColour);
}
.Divider {
  height: calc(var(--DIVIDER1HEIGHT) / 2);
}
.greybgFiller {
  background-color: var(--grey);
}
.flexCenter {
  display: flex;
  justify-content: center;
}
.flexAlign {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.w-var-greyblw {
  width: var(--GREYBLOCKWIDTH);
}
.flex-xl-gap-0 {
  @media (min-width: 1400px) {
    gap: 0px;
  }
}